<?xml version="1.0" encoding="UTF-8"?>
<project name="crxc" basedir="." default="compile">
	<description>
		Build script for the crux project by Erik Westrup.
	</description>

	<!-- *** Global Variables *** -->
	<property name="project.name" value="cruxc" />
	<property name="project.authors" value="Erik Westrup" />
	<property name="path.source" value="src" />
	<property name="path.destination" value="bin" />
	<property name="path.library" value="lib" />
	<property name="path.documentation" value="doc/gen/" />
	<property name="path.release" value="release" />
	<property name="path.test" value="test" />
	<property name="path.mainClass" value="crux/Compiler" />


	<!-- Library versions in use. Please update path externalLibs if you add/remove from here.-->
	<property name="junit" value="junit-4.10.jar" />

	<!-- *** Paths *** -->
	<path id="externalLibs">
		<fileset dir="${path.library}">
			<include name="${junit}" />
		</fileset>
	</path>

	<path id="classpath.tests">
		<pathelement location="${path.destination}" />
	</path>

	
	<!-- *** Targets *** -->
	<!-- Here all targets exists. -->

	<target name="compile" depends="tags" description="Compile the sources to the destination.">
		<mkdir dir="bin" />
		<javac destdir="${path.destination}" includeantruntime="false" debug="true" debuglevel="lines,vars,source">
			<src path="${path.source}" />
			<classpath refid="externalLibs" />
				<compilerarg value="-Xlint" /> <!-- Enable all recommended warnings. -->
		</javac>
	</target>

	<target name="tags"  description="Generate a tags file.">
  		<exec executable="ctags">
    		<arg value="-R"/>
    		<arg value="."/>
  		</exec>
	</target>

	<target name="release" depends="distribute,test" description="Make a full release.">
		<property name="jarName" value="${path.release}/${project.name}.jar" />
		<echo message="A full release was successfully created!" />
		<echo message="File: ${jarName}" />
	</target>

	<target name="cc" depends="clean,compile" description="Short hand for clean and compile.">
	</target>

	<target name="distribute" depends="compile,doc" description="Make a releaseable JAR.">

		<property name="jarName" value="${path.release}/${project.name}.jar" />
		<delete file="${jarName}" />

		<jar destfile="${jarName}" update="no">
			<zipgroupfileset dir="${path.library}">
				<include name="**/*.jar" />
			</zipgroupfileset>
			<fileset dir="${path.documentation}" includes="**/*" />
			<fileset dir="${path.destination}" includes="**/*.class" />
			<manifest>
				<attribute name="Main-class" value="${path.mainClass}" />
			</manifest>
		</jar>
	</target>

	<target name="clean" description="Delete old binaries and text files.">
		<delete includeemptydirs="true" quiet="true"> 
			<fileset dir="${path.destination}" includes="**/*" />
			<fileset dir="${path.documentation}" includes="**/*" />
		</delete>
	</target>

	<target name="test" depends="compile" description="Run JUnit tests and stop build if one fails.">
		<junit printsummary="true" fork="yes" haltonfailure="true">
			<formatter type="plain" usefile="no" />
			<classpath refid="classpath.tests" />
			<classpath refid="externalLibs" />
			<!-- Enalbe java keyword assert. Can by enable on commandline with $(java [-ea|-enableassertions]).  -->
			<assertions><enable/></assertions>

			<batchtest>
				<!-- The $* excludes inner classes. -->
				<fileset dir="${path.destination}/" includes="${path.test}/**/**Test**.class" excludes="**/*$*.class" />
			</batchtest>
		</junit>
	</target>

	<target name="doc" description="Generate javadocs from sourcefiles">
		<mkdir dir="${path.documentation}" />
		<javadoc destdir="${path.documentation}" author="true" version="true" use="true" doctitle="${project.name} Documentation" windowtitle="${project.name} Documentation" bottom="Documentation produly presented by the authors ${project.authors}." encoding="UTF-8">
			<fileset dir="${path.source}">
				<include name="**/*.java" />
				<exclude name="**/*Test*.java" />
			</fileset>
			<link href="http://download.oracle.com/javase/6/docs/api/" />
			<link href="http://opencsv.sourceforge.net/api/" />
		</javadoc>

	</target>
</project>
